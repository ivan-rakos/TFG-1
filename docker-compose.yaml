#La imagen que se utiliza es la que se crea con Dockerfile, en caso de no haber compilado la imagen se debe ejecutar el comando: 
docker build -t tomcat-tfg:v3 .
#se crean dos contenedores con la imagen de tomcat
#se le asigna un volumen el cual compartir치 archivos necesarios para realizar la configuraci칩n necesaria en cada tomcat
#se indica que al inicio se ejecute el script de configuraci칩n
#se le indica a que red pertenecen 
version: "2"

services:

  tomcat1:
    image: tomcat-tfg:v3
    volumes:
      - ./scripts:/usr/share/scripts/
      - ./clavesPublicas/authorized_keys:/root/.ssh/authorized_keys
    command: bash -c "bash /usr/share/scripts/initialConfiguration.sh"
    networks:
      lan:
        ipv4_address: 192.168.1.2


  tomcat2:
    image: tomcat-tfg:v3
    volumes:
      - ./scripts:/usr/share/scripts/
      - ./clavesPublicas/authorized_keys:/root/.ssh/authorized_keys
    command: bash -c "bash /usr/share/scripts/initialConfiguration.sh"
    networks:
      lan:
        ipv4_address: 192.168.1.3



     
#se crea una red con el driver macvlan para que los contenedores puedan ser vistos por los dem치s equipos de la red
networks:
  lan:
    driver: macvlan
    driver_opts:
      parent: enp0s3
    ipam:
      config:
        - subnet: "192.168.1.0/24"
          gateway: "192.168.1.1"
